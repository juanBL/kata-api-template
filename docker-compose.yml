version: '3.7'

services:
  caddy:
    image: caddy:2-alpine
    depends_on:
      - private_api_backend_php
    environment:
      HTTP_PORT: 8080
    restart: unless-stopped
    volumes:
      - api-php_socket:/var/run/php
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./public:/var/www/html/public:ro
    ports:
      - "8080:8080"

  private_api_backend_php:
    container_name: private_api_backend_php
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - skeleton-php-symfony-postgres
    volumes:
      - api-php_socket:/var/run/php
      - ./:/var/www/html:rw
      - ./docker/php/conf.d/symfony.dev.ini:/usr/local/etc/php/conf.d/symfony.ini
  
  skeleton-php-symfony-postgres:
    container_name: skeleton-php-symfony-postgres
    image: postgres:14-alpine
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
volumes:
  api-php_socket:
